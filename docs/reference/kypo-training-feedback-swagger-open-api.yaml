---
swagger: "2.0"
info:
  version: "Version: 1.0.2"
  title: "KYPO Training Feedback Service - API Reference"
host: "localhost:8087"
basePath: "/kypo-training-feedback/api/v1"
tags:
- name: "Commands"
- name: "Graphs"
- name: "Trainees"
schemes:
- "http"
- "https"
paths:
  /commands/correct:
    get:
      tags:
      - "Commands"
      summary: "Get aggregated correct commands from given trainees"
      description: ""
      operationId: "getAggregatedCorrectCommands"
      produces:
      - "application/json"
      parameters:
      - name: "runIds"
        in: "query"
        description: "The trainees training run ids"
        required: true
        type: "List of numbers"
        items:
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Aggregated correct commands have been found."
          schema:
            $ref: "#/definitions/AggregatedCommandsDTO"
        404:
          description: "Aggregated correct commands have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /commands/incorrect:
    get:
      tags:
      - "Commands"
      summary: "Get aggregated incorrect commands from given trainees and with specific\
        \ mistake type"
      description: ""
      operationId: "getAggregatedIncorrectCommands"
      produces:
      - "application/json"
      parameters:
      - name: "runIds"
        in: "query"
        description: "The trainees sandbox ids"
        required: true
        type: "List of numbers"
        items:
          type: "integer"
          format: "int64"
      - name: "mistakeTypes"
        in: "query"
        description: "Mistake types"
        required: true
        type: "List of strings"
        items:
          type: "string"
          enum:
          - "SYNTAX_UNKNOWN_COMMAND"
          - "SYNTAX_INVALID_ARGUMENTS"
          - "SYNTAX_INVALID_OPTION"
          - "SYNTAX_MISSING_OPTION_PARAM"
          - "SYNTAX_INVALID_OPTION_PARAM"
          - "SEMANTIC_UNKNOWN_IP"
          - "SEMANTIC_WRONG_IP"
      responses:
        200:
          description: "Trainees invalid commands have been found."
          schema:
            $ref: "#/definitions/CommandDTO"
        404:
          description: "Trainees invalid commands have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /commands/training-runs/{runId}:
    get:
      tags:
      - "Commands"
      summary: "Get all commands entered in the given training run"
      description: ""
      operationId: "getCommandsByTrainingRun"
      produces:
      - "application/json"
      parameters:
      - name: "runId"
        in: "path"
        description: "The trainee's training run id"
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Trainee commands have been found."
          schema:
            $ref: "#/definitions/CommandDTO"
        404:
          description: "Trainee commands have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /commands/training-runs/{runId}/levels/{levelId}:
    get:
      tags:
      - "Commands"
      summary: "Get all commands entered in the given training run and specified level"
      description: ""
      operationId: "getCommandsByTrainingRunAndLevel"
      produces:
      - "application/json"
      parameters:
      - name: "runId"
        in: "path"
        description: "The trainee sandbox id"
        required: true
        type: "long"
        format: "int64"
      - name: "levelId"
        in: "path"
        description: "The trainees level id"
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Trainee commands have been found."
          schema:
            $ref: "#/definitions/CommandDTO"
        404:
          description: "Trainee commands have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/reference/training-definitions/{definitionId}:
    delete:
      tags:
      - "Graphs"
      summary: "Delete reference graph"
      description: ""
      operationId: "deleteReferenceGraph"
      produces:
      - "application/json"
      parameters:
      - name: "definitionId"
        in: "path"
        description: "ID of the training definition."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GraphDTO"
        204:
          description: "Reference graph successfully deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/summary/training-instances/{instanceId}:
    delete:
      tags:
      - "Graphs"
      summary: "Delete summary graph"
      description: ""
      operationId: "deleteSummaryGraph"
      produces:
      - "application/json"
      parameters:
      - name: "instanceId"
        in: "path"
        description: "ID of the training instance."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GraphDTO"
        204:
          description: "Trainee graph successfully deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/trainee/training-runs/{runId}:
    delete:
      tags:
      - "Graphs"
      summary: "Delete trainee graph"
      description: ""
      operationId: "deleteTraineeGraph"
      produces:
      - "application/json"
      parameters:
      - name: "runId"
        in: "path"
        description: "ID of the training instance."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GraphDTO"
        204:
          description: "Trainee graph successfully deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/training-definitions/{definitionId}:
    get:
      tags:
      - "Graphs"
      summary: "Get reference graph by training definition ID"
      description: ""
      operationId: "getReferenceGraph"
      produces:
      - "application/json"
      parameters:
      - name: "definitionId"
        in: "path"
        description: "ID of the training definition."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Reference graph have been found."
          schema:
            $ref: "#/definitions/GraphDTO"
        404:
          description: "Reference graph have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
    post:
      tags:
      - "Graphs"
      summary: "Create reference graph for given training definition"
      description: ""
      operationId: "createReferenceGraph"
      produces:
      - "application/json"
      parameters:
      - name: "definitionId"
        in: "path"
        description: "ID of the training definition."
        required: true
        type: "long"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Reference solutions of levels."
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/DefinitionLevel"
      responses:
        200:
          description: "Reference graph successfully created."
          schema:
            $ref: "#/definitions/GraphDTO"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/training-definitions/{definitionId}/training-instances/{instanceId}:
    post:
      tags:
      - "Graphs"
      summary: "Create summary graph"
      description: ""
      operationId: "createSummaryGraph"
      produces:
      - "application/json"
      parameters:
      - name: "definitionId"
        in: "path"
        description: "ID of the training definition."
        required: true
        type: "long"
        format: "int64"
      - name: "instanceId"
        in: "path"
        description: "ID of the training instance."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Summary graph successfully created."
          schema:
            $ref: "#/definitions/GraphDTO"
        404:
          description: "Trainees graphs needed for creation have been not found"
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/training-definitions/{definitionId}/training-instances/{instanceId}/training-runs/{runId}:
    post:
      tags:
      - "Graphs"
      summary: "Create trainee graph with command analysis"
      description: "This should be done only once for every user"
      operationId: "createTraineeGraph"
      produces:
      - "application/json"
      parameters:
      - name: "definitionId"
        in: "path"
        description: "The training definition ID"
        required: true
        type: "integer"
        format: "int64"
      - name: "instanceId"
        in: "path"
        description: "The training instance ID"
        required: true
        type: "integer"
        format: "int64"
      - name: "runId"
        in: "path"
        description: "The trainee run ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Reference solutions of levels"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/DefinitionLevel"
      responses:
        200:
          description: "Trainee graph successfully created."
        404:
          description: "Training run with given ID not found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/training-instances/{instanceId}:
    get:
      tags:
      - "Graphs"
      summary: "Get summary graph by training instance ID"
      description: ""
      operationId: "getSummaryGraph"
      produces:
      - "application/json"
      parameters:
      - name: "instanceId"
        in: "path"
        description: "Id of the training instance."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Summary graph instance have been found."
          schema:
            $ref: "#/definitions/GraphDTO"
        404:
          description: "Summary graph have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
    delete:
      tags:
      - "Graphs"
      summary: "Delete all graphs by training instance"
      description: ""
      operationId: "deleteGraphsByTrainingInstance"
      produces:
      - "application/json"
      parameters:
      - name: "instanceId"
        in: "path"
        description: "ID of the training instance."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GraphDTO"
        204:
          description: "All graphs created for trianing instance successfully deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /graphs/training-runs/{runId}:
    get:
      tags:
      - "Graphs"
      summary: "Get trainee graph by trainee training run ID"
      description: ""
      operationId: "getTraineeGraph"
      produces:
      - "application/json"
      parameters:
      - name: "runId"
        in: "path"
        description: "ID of the training run."
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Trainee graph have been found."
          schema:
            $ref: "#/definitions/GraphDTO"
        404:
          description: "Trainee graph have not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /trainees/training-instances/{instanceId}:
    get:
      tags:
      - "Trainees"
      summary: "Get all trainees by training instance ID"
      description: ""
      operationId: "getTraineesByTrainingInstanceId"
      produces:
      - "application/json"
      parameters:
      - name: "instanceId"
        in: "path"
        description: "ID of the training instance"
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Trainees have been found."
          schema:
            $ref: "#/definitions/TraineeDTO"
        404:
          description: "None trainee instance have been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /trainees/training-runs/{runId}:
    get:
      tags:
      - "Trainees"
      summary: "Get trainee by training run ID"
      description: ""
      operationId: "getTraineeByTrainingRunId"
      produces:
      - "application/json"
      parameters:
      - name: "runId"
        in: "path"
        description: "ID of the training run"
        required: true
        type: "long"
        format: "int64"
      responses:
        200:
          description: "Trainee has been found."
          schema:
            $ref: "#/definitions/TraineeDTO"
        404:
          description: "Trainee has not been found."
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
definitions:
  AbstractCommandDTO:
    type: "object"
    required:
    - "cmd"
    - "commandType"
    properties:
      commandType:
        type: "string"
        example: "BASH"
        description: "Distinguish tool/command line  in which command ran."
      cmd:
        type: "string"
        example: "ls"
        description: "Command without arguments/options."
    description: "AggregatedCommandsDTO, CommandDTO"
  AggregatedCommandsDTO:
    allOf:
    - $ref: "#/definitions/AbstractCommandDTO"
    - type: "object"
      required:
      - "aggregatedCommandsPerOptions"
      - "frequency"
      properties:
        frequency:
          type: "integer"
          format: "int64"
          example: 25
          description: "Count of all usages of same command regardless to command\
            \ options."
        aggregatedCommandsPerOptions:
          type: "array"
          example: "-vvv: 12, \n -a: 22"
          description: "List of incorrect commands with same command and command type"
          items:
            $ref: "#/definitions/CommandPerOptions"
      description: "Contains commands aggregated by command type and command"
  ApiEntityError:
    allOf:
    - $ref: "#/definitions/ApiError"
    - type: "object"
      properties:
        entityErrorDetail:
          description: "Detail of the entity which is related to the error."
          $ref: "#/definitions/EntityErrorDetail"
      description: "A detailed error information related to the entity."
  ApiError:
    type: "object"
    properties:
      timestamp:
        type: "integer"
        format: "int64"
        example: "1574062900 (different for each type of exception)"
        description: "The time when the exception occurred"
      status:
        type: "string"
        example: "404 Not found (different for each type of exception)."
        description: "The HTTP response status code"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      message:
        type: "string"
        example: "The IDMGroup could not be found in database (different for each\
          \ type of exception)."
        description: "The specific description of the ApiError."
      errors:
        type: "array"
        example: "[ \"The requested resource was not found (different for each type\
          \ of exception). \"]"
        description: "The list of main reasons of the ApiError."
        items:
          type: "string"
      path:
        type: "string"
        example: "/kypo2-rest-user-and-group/api/v1/groups/1000 (different for each\
          \ type of exception)."
        description: "The requested URI path which caused error."
    description: "Superclass for classes ApiEntityError and ApiMicroserviceError"
  ApiMicroserviceError:
    allOf:
    - $ref: "#/definitions/ApiError"
    - type: "object"
      properties:
        apiSubError:
          description: "Detailed error from another microservice."
          $ref: "#/definitions/ApiSubError"
      description: "A detailed error information related to the microservice."
  ApiSubError:
    type: "object"
    properties:
      message:
        type: "string"
    description: "Superclass for classes JavaApiError and PythonApiError"
  CommandDTO:
    allOf:
    - $ref: "#/definitions/AbstractCommandDTO"
    - type: "object"
      required:
      - "fromHostIp"
      - "options"
      - "timestamp"
      - "trainingTime"
      properties:
        timestamp:
          type: "string"
          format: "date-time"
          example: "07:23:43"
          description: "Time when command was recorded."
        trainingTime:
          example: "07:23:43"
          description: "Training time when command was recorded."
          $ref: "#/definitions/Duration"
        fromHostIp:
          type: "string"
          example: "10.10.17.5"
          description: "Ip address where command was submitted."
        options:
          type: "string"
          example: "-p 25 -a 20.20.15.18"
          description: "Valid command options"
      description: "Command with valid syntax and semantic."
  CommandPerOptions:
    type: "object"
    required:
    - "cmd"
    - "commandType"
    - "frequency"
    - "fromHostIp"
    - "mistake"
    - "options"
    properties:
      cmd:
        type: "string"
        example: "ls"
        description: "Command without arguments/options."
      commandType:
        type: "string"
        example: "BASH"
        description: "Distinguish tool/command line  in which command ran."
      options:
        type: "string"
        example: "-p 25 -a 20.20.15.18"
        description: "Valid command options"
      mistake:
        type: "string"
        example: "SEMANTIC_WRONG_IP"
        description: "Classify command by mistake type into categories."
        enum:
        - "SYNTAX_UNKNOWN_COMMAND"
        - "SYNTAX_INVALID_ARGUMENTS"
        - "SYNTAX_INVALID_OPTION"
        - "SYNTAX_MISSING_OPTION_PARAM"
        - "SYNTAX_INVALID_OPTION_PARAM"
        - "SEMANTIC_UNKNOWN_IP"
        - "SEMANTIC_WRONG_IP"
      fromHostIp:
        type: "string"
        example: "10.10.17.5"
        description: "Ip address where command was submitted."
      frequency:
        type: "integer"
        format: "int64"
        example: 25
        description: "Count of all usages of same command regardless to command options."
  DefinitionLevel:
    type: "object"
    properties:
      reference_solution:
        type: "array"
        items:
          $ref: "#/definitions/DefinitionReferenceSolution"
      id:
        type: "integer"
        format: "int64"
      order:
        type: "integer"
        format: "int32"
  DefinitionReferenceSolution:
    type: "object"
    properties:
      cmd:
        type: "string"
      optional:
        type: "boolean"
      cmd_type:
        type: "string"
      state_name:
        type: "string"
      prereq_state:
        type: "array"
        items:
          type: "string"
      cmd_regex:
        type: "string"
  Duration:
    type: "object"
    properties:
      seconds:
        type: "integer"
        format: "int64"
      nano:
        type: "integer"
        format: "int32"
      units:
        type: "array"
        items:
          $ref: "#/definitions/TemporalUnit"
      zero:
        type: "boolean"
      negative:
        type: "boolean"
  EntityErrorDetail:
    type: "object"
    properties:
      entity:
        type: "string"
        example: "IDMGroup"
        description: "Class of the entity."
      identifier:
        type: "string"
        example: "id"
        description: "Identifier of the entity."
      identifierValue:
        type: "object"
        example: "1"
        description: "Value of the identifier."
      reason:
        type: "string"
        example: "Group with same name already exists."
        description: "Detailed message of the exception"
  GraphDTO:
    type: "object"
    required:
    - "graph"
    properties:
      graph:
        type: "string"
        example: "'digraph {a -> b}'"
        description: "Graph in DOT format."
    description: "Graph in DOT format."
  JavaApiError:
    allOf:
    - $ref: "#/definitions/ApiSubError"
    - type: "object"
      properties:
        message:
          type: "string"
          example: "The IDMGroup could not be found in database (different for each\
            \ type of exception)."
          description: "The specific description of the ApiError."
        timestamp:
          type: "integer"
          format: "int64"
          example: "1574062900 (different for each type of exception)"
          description: "The time when the exception occurred"
        status:
          type: "string"
          example: "404 Not found (different for each type of exception)."
          description: "The HTTP response status code"
          enum:
          - "CONTINUE"
          - "SWITCHING_PROTOCOLS"
          - "PROCESSING"
          - "CHECKPOINT"
          - "OK"
          - "CREATED"
          - "ACCEPTED"
          - "NON_AUTHORITATIVE_INFORMATION"
          - "NO_CONTENT"
          - "RESET_CONTENT"
          - "PARTIAL_CONTENT"
          - "MULTI_STATUS"
          - "ALREADY_REPORTED"
          - "IM_USED"
          - "MULTIPLE_CHOICES"
          - "MOVED_PERMANENTLY"
          - "FOUND"
          - "MOVED_TEMPORARILY"
          - "SEE_OTHER"
          - "NOT_MODIFIED"
          - "USE_PROXY"
          - "TEMPORARY_REDIRECT"
          - "PERMANENT_REDIRECT"
          - "BAD_REQUEST"
          - "UNAUTHORIZED"
          - "PAYMENT_REQUIRED"
          - "FORBIDDEN"
          - "NOT_FOUND"
          - "METHOD_NOT_ALLOWED"
          - "NOT_ACCEPTABLE"
          - "PROXY_AUTHENTICATION_REQUIRED"
          - "REQUEST_TIMEOUT"
          - "CONFLICT"
          - "GONE"
          - "LENGTH_REQUIRED"
          - "PRECONDITION_FAILED"
          - "PAYLOAD_TOO_LARGE"
          - "REQUEST_ENTITY_TOO_LARGE"
          - "URI_TOO_LONG"
          - "REQUEST_URI_TOO_LONG"
          - "UNSUPPORTED_MEDIA_TYPE"
          - "REQUESTED_RANGE_NOT_SATISFIABLE"
          - "EXPECTATION_FAILED"
          - "I_AM_A_TEAPOT"
          - "INSUFFICIENT_SPACE_ON_RESOURCE"
          - "METHOD_FAILURE"
          - "DESTINATION_LOCKED"
          - "UNPROCESSABLE_ENTITY"
          - "LOCKED"
          - "FAILED_DEPENDENCY"
          - "UPGRADE_REQUIRED"
          - "PRECONDITION_REQUIRED"
          - "TOO_MANY_REQUESTS"
          - "REQUEST_HEADER_FIELDS_TOO_LARGE"
          - "UNAVAILABLE_FOR_LEGAL_REASONS"
          - "INTERNAL_SERVER_ERROR"
          - "NOT_IMPLEMENTED"
          - "BAD_GATEWAY"
          - "SERVICE_UNAVAILABLE"
          - "GATEWAY_TIMEOUT"
          - "HTTP_VERSION_NOT_SUPPORTED"
          - "VARIANT_ALSO_NEGOTIATES"
          - "INSUFFICIENT_STORAGE"
          - "LOOP_DETECTED"
          - "BANDWIDTH_LIMIT_EXCEEDED"
          - "NOT_EXTENDED"
          - "NETWORK_AUTHENTICATION_REQUIRED"
        errors:
          type: "array"
          example: "[ \"The requested resource was not found (different for each type\
            \ of exception).\" ]"
          description: "The list of main reasons of the ApiError."
          items:
            type: "string"
        path:
          type: "string"
          example: "/kypo2-rest-user-and-group/api/v1/groups/1000 (different for each\
            \ type of exception)."
          description: "The requested URI path which caused error."
        entity_error_detail:
          description: "Entity detail related to the error."
          $ref: "#/definitions/EntityErrorDetail"
      description: "A detailed error from another Java microservice."
  PythonApiError:
    allOf:
    - $ref: "#/definitions/ApiSubError"
    - type: "object"
      properties:
        detail:
          type: "string"
          example: "Sandbox could not be found."
          description: "Detail message of the error."
        parameters:
          type: "object"
          example: "name: sandbox"
          description: "Parameters to specify details of the error."
          additionalProperties:
            type: "string"
      description: "A detailed error from another Python mircorservice."
  TemporalUnit:
    type: "object"
    properties:
      dateBased:
        type: "boolean"
      timeBased:
        type: "boolean"
      duration:
        $ref: "#/definitions/Duration"
      durationEstimated:
        type: "boolean"
  TraineeDTO:
    type: "object"
    required:
    - "trainingInstanceId"
    - "trainingRunId"
    - "userRefId"
    properties:
      trainingRunId:
        type: "integer"
        format: "int64"
        example: 68
        description: "Id of the trainees training run."
      trainingInstanceId:
        type: "integer"
        format: "int64"
        example: 12
        description: "Id of the training instance in which the training has been carried\
          \ out."
      userRefId:
        type: "integer"
        format: "int64"
        example: 31
        description: "Id of trainee in the user management service."
      sub:
        type: "string"
        example: "john.doe@mail.com"
        description: "Trainee's subject name."
      fullName:
        type: "string"
        example: "Mgr. John Doe"
        description: "Trainee's full name."
      picture:
        type: "array"
        example: "iVBORw0KGgoAAAANSUhEUgAAAEsAAABLCAYAAAA4TnrqAAACIUlEQVR4Xu3YsY0dSQxAQQUlpXT5Z3CS/YgxSrQa4gLlEOBb9pj/x6//fv7/t/78/XhN3yBWyz3kBX2DWC33kBf0DWK13ENe0DeI1XIPeUHfIFbLPeQFfYNYLfeQF/QNYrXcQ17QN4jVcg95Qd8gVss95AV9g1gt95AX9A1itdxDXtA3iNVyD3lB3yBWyz3kBX2DWC33kBf0DWLERGOiLdGWaEuMgeghoi3RlmhLjIHoIaIt0ZZoS4yB6CGiLdGWaEuMgeghoi3RlmhLjIHoIaIt0ZZoS4yB6CGiLdGWaEuMgeghoi3RlmhLjIHoIaIt0ZZoS4yB6CGiLdGWaEuMgeghoi3RlmhLjIHoIaIt0ZZoS4yB6CGiLdGWaEuMgeghoi3RlmhLjIHoIaIt0ZZoS6z+8b/mPha4jwXuY4H7WOA+FriPBe5jgftY4D4WuI8F7mOB+1jgPha4jwXGbzbn2xicb2Nwvo3B+TYG59sYnG9jcL6Nwfk2BufbGJxvY3C+jcH5Ngbn2xicb2Nwvq1+z2pMtCXaEm2J1XIPEW2JtkRbYrXcQ0Rboi3Rllgt9xDRlmhLtCVWyz1EtCXaEm2J1XIPEW2JtkRbYrXcQ0Rboi3Rllgt9xDRlmhLtCVWyz1EtCXaEm2J1XIPEW2JtkRbYrXcQ0Rboi3Rllgt9xDRlmhLtCVWyz1EtCXaEm2J1XIPEW2JtkRbYrXcQ0Rboi3RlvgNt34wfeJElG8AAAAASUVORK5CYII="
        description: "Trainee's identicon."
        items:
          type: "string"
          format: "byte"
    description: "Trainee which absolved training."

