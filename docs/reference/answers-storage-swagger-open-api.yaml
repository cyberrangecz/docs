---
swagger: "2.0"
info:
  version: "Version: 0.0.1"
  title: "CyberRangeCZ Platform Answers Storage - API Reference"
host: "localhost:8087"
basePath: "/answers-storage/api/v1"
tags:
- name: "sandboxes"
schemes:
- "http"
- "https"
paths:
  /sandboxes:
    get:
      tags:
      - "sandboxes"
      summary: "Get all sandboxes and their answers."
      description: ""
      operationId: "findAnswersForAllSandboxes"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "The answers for all sandboxes were found."
          schema:
            $ref: "#/definitions/SandboxInfoDto"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
    post:
      tags:
      - "sandboxes"
      summary: "Store all answers for particular sandbox."
      description: ""
      operationId: "storeAnswersForParticularSandbox"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SandboxInfoCreateDto"
      responses:
        201:
          description: "The answers for particular sandbox were created."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /sandboxes/access-tokens/{accessToken}/users/{userId}:
    get:
      tags:
      - "sandboxes"
      summary: "Get answers for local sandbox."
      description: ""
      operationId: "findAnswersForParticularLocalSandbox"
      produces:
      - "application/json"
      parameters:
      - name: "accessToken"
        in: "path"
        description: "Token of the training instance in which the local sandbox is\
          \ used."
        required: true
        type: "string"
      - name: "userId"
        in: "path"
        description: "ID of the user whose local sandbox to delete."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "The answers for particular local sandbox were found."
          schema:
            $ref: "#/definitions/SandboxInfoDto"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
    delete:
      tags:
      - "sandboxes"
      summary: "Delete local sandbox reference with all answers."
      description: ""
      operationId: "deleteLocalSandboxReferenceWithAnswers"
      parameters:
      - name: "accessToken"
        in: "path"
        description: "Token of the training instance in which the local sandbox is\
          \ used."
        required: true
        type: "string"
      - name: "userId"
        in: "path"
        description: "ID of the user whose local sandbox to delete."
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "The local sandbox reference with answers was successfully\
            \ deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /sandboxes/access-tokens/{accessToken}/users/{userId}/answers/{answerVariableName}:
    get:
      tags:
      - "sandboxes"
      summary: "Get answer for particular local sandbox and by answer variable name."
      description: ""
      operationId: "findAnswerByLocalSandboxAndVariableName"
      produces:
      - "application/json"
      parameters:
      - name: "accessToken"
        in: "path"
        description: "Token of the training instance in which the local sandbox is\
          \ used."
        required: true
        type: "string"
      - name: "userId"
        in: "path"
        description: "ID of the user whose local sandbox to delete."
        required: true
        type: "integer"
        format: "int64"
      - name: "answerVariableName"
        in: "path"
        description: "Variable name of the answer."
        required: true
        type: "string"
      responses:
        200:
          description: "The answer for particular local sandbox and by identifier\
            \ was found."
          schema:
            type: "string"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /sandboxes/{allocationId}:
    delete:
      tags:
      - "sandboxes"
      summary: "Delete cloud sandbox references with all answers by allocation ID."
      description: ""
      operationId: "deleteCloudSandboxReferenceWithAnswersByAllocId"
      parameters:
      - name: "sandboxRefId"
        in: "path"
        description: "allocationID of the cloud sandboxes to delete."
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "The cloud sandbox reference with answers was successfully\
            \ deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /sandboxes/{sandboxRefId}:
    delete:
      tags:
      - "sandboxes"
      summary: "Delete cloud sandbox reference with all answers by sandbox reference."
      description: ""
      operationId: "deleteCloudSandboxReferenceWithAnswers"
      parameters:
      - name: "sandboxRefId"
        in: "path"
        description: "ID of the user whose cloud sandbox to delete."
        required: true
        type: "string"
      responses:
        204:
          description: "The cloud sandbox reference with answers was successfully\
            \ deleted."
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /sandboxes/{sandboxRefId}/answers:
    get:
      tags:
      - "sandboxes"
      summary: "Get answers for cloud sandbox."
      description: ""
      operationId: "findAnswersForParticularCloudSandbox"
      produces:
      - "application/json"
      parameters:
      - name: "sandboxRefId"
        in: "path"
        description: "ID sandbox for that we store answers."
        required: true
        type: "string"
      responses:
        200:
          description: "The answers for particular cloud sandbox were found."
          schema:
            $ref: "#/definitions/SandboxInfoDto"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
  /sandboxes/{sandboxRefId}/answers/{answerVariableName}:
    get:
      tags:
      - "sandboxes"
      summary: "Get answer for particular cloud sandbox and by answer variable name."
      description: ""
      operationId: "findAnswerByCloudSandboxAndVariableName"
      produces:
      - "application/json"
      parameters:
      - name: "sandboxRefId"
        in: "path"
        description: "ID of sandbox for that we store answers."
        required: true
        type: "string"
      - name: "answerVariableName"
        in: "path"
        description: "Variable name of the answer."
        required: true
        type: "string"
      responses:
        200:
          description: "The answer for particular cloud sandbox and by identifier\
            \ was found."
          schema:
            type: "string"
        500:
          description: "Unexpected condition was encountered."
          schema:
            $ref: "#/definitions/ApiError"
definitions:
  ApiEntityError:
    allOf:
    - $ref: "#/definitions/ApiError"
    - type: "object"
      properties:
        entity_error_detail:
          description: "Detail of the entity which is related to the error."
          $ref: "#/definitions/EntityErrorDetail"
      description: "A detailed error information related to the entity."
  ApiError:
    type: "object"
    properties:
      timestamp:
        type: "integer"
        format: "int64"
        example: "1574062900 (different for each type of exception)"
        description: "The time when the exception occurred"
      status:
        type: "string"
        example: "404 Not found (different for each type of exception)."
        description: "The HTTP response status code"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      message:
        type: "string"
        example: "The IDMGroup could not be found in database (different for each\
          \ type of exception)."
        description: "The specific description of the ApiError."
      errors:
        type: "array"
        example: "[The requested resource was not found (different for each type of\
          \ exception).]"
        description: "The list of main reasons of the ApiError."
        items:
          type: "string"
      path:
        type: "string"
        example: "/user-and-group/api/v1/groups/1000 (different for each type of exception)."
        description: "The requested URI path which caused error."
    description: "Superclass for classes ApiEntityError and ApiMicroserviceError"
  EntityErrorDetail:
    type: "object"
    properties:
      entity:
        type: "string"
        example: "IDMGroup"
        description: "Class of the entity."
      identifier:
        type: "string"
        example: "id"
        description: "Identifier of the entity."
      identifier_value:
        type: "object"
        example: "1"
        description: "Value of the identifier."
      reason:
        type: "string"
        example: "Group with same name already exists."
        description: "Detailed message of the exception"
  SandboxAnswersCreateDto:
    type: "object"
    properties:
      answer_content:
        type: "string"
        example: "nmap 192.168.0.1"
        description: "The content of the variant answer in particular (phase/level)"
        minLength: 0
        maxLength: 2048
      answer_variable_name:
        type: "string"
        example: "sandbox-1-2-answer"
        description: "The variable name of the variant answer"
        minLength: 0
        maxLength: 255
  SandboxAnswersDto:
    type: "object"
    properties:
      answer_content:
        type: "string"
        example: "nmap 192.168.0.1"
        description: "The content of the variant answer in particular (phase/level)"
      answer_variable_name:
        type: "string"
        example: "sandbox-1-2-answer"
        description: "The variable name of the variant answer"
  SandboxInfoCreateDto:
    type: "object"
    properties:
      sandbox_ref_id:
        type: "string"
        example: "string"
        description: "The identifier of a sandbox for that we store the answers"
      allocation_unit_id:
        type: "integer"
        format: "int64"
        example: 12
        description: "The identifier of a sandbox allocation"
      access_token:
        type: "string"
        example: "abc-123"
        description: "The identifier of the training instance in which the local sandbox\
          \ is/has been used."
      user_id:
        type: "integer"
        format: "int64"
        example: 12
        description: "The identifier of the user who possess the local sandbox."
      sandbox_answers:
        type: "array"
        description: "The answers for given sandbox"
        items:
          $ref: "#/definitions/SandboxAnswersCreateDto"
  SandboxInfoDto:
    type: "object"
    properties:
      sandbox_ref_id:
        type: "string"
        example: "string"
        description: "The identifier of a sandbox for that we store the answers"
      allocation_id:
        type: "integer"
        format: "int64"
        example: 12
        description: "The identifier of a sandbox allocation"
      access_token:
        type: "string"
        example: "abc-123"
        description: "The identifier of the training instance in which the local sandbox\
          \ is/has been used."
      user_id:
        type: "integer"
        format: "int64"
        example: 12
        description: "The identifier of the user who possess the local sandbox."
      sandbox_answers:
        type: "array"
        description: "The answers for given sandbox"
        items:
          $ref: "#/definitions/SandboxAnswersDto"
